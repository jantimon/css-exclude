{
  // Settings
  "passfail": false, // Stop on first error.
  "maxerr": 100, // Maximum error before stopping.


  // Predefined globals whom JSHint will ignore.
  "browser": true, // Standard browser globals e.g. `window`, `document`.

  "node": true,
  "rhino": false,
  "couch": false,
  "wsh": false, // Windows Scripting Host.

  "jquery": true,
  "prototypejs": false,
  "mootools": false,
  "dojo": false,

  "predef": [ // Custom globals.
  ],

  // Development.
  "debug": false, // Allow debugger statements e.g. browser breakpoints.
  "devel": false, // Allow developments statements e.g. `console.log();`.

  // EcmaScript 5.
  "es3": true, // Code needs to adhere to ECMAScript 3 specification to be executable in older browsersâ€”such as Internet Explorer 6/7/8/9
  "strict": true, // Require `use strict` pragma in every file.
  "globalstrict": false, // Allow global "use strict" (also enables 'strict').

  // The Good Parts.
  "asi": false, // Tolerate Automatic Semicolon Insertion (no semicolons).
  "laxbreak": false, // Tolerate unsafe line breaks e.g. `return [\n] x` without semicolons.
  "laxcomma": false, // Tolerate option suppresses warnings about comma-first coding style
  "bitwise": true, // Prohibit bitwise operators (&, |, ^, etc.).
  "boss": false, // Tolerate assignments inside if, for & while. Usually conditions & loops are for comparison, not assignments.
  "curly": true, // Require {} for every new block or scope.
  "eqeqeq": true, // Require triple equals i.e. `===`.
  "eqnull": false, // Tolerate use of `== null`.
  "evil": false, // Tolerate use of `eval`.
  "expr": true, // Tolerate `ExpressionStatement` as Programs.
  "forin": false, // Tolerate `for in` loops without `hasOwnPrototype`.
  "immed": true, // Require immediate invocations to be wrapped in parens e.g. `( function(){}() );`
  "latedef": true, // Prohipit variable use before definition.
  "loopfunc": false, // Allow functions to be defined within loops.
  "noarg": true, // Prohibit use of `arguments.caller` and `arguments.callee`.
  "regexp": false, // Prohibit `.` and `[^...]` in regular expressions.
  "regexdash": false, // Tolerate unescaped last dash i.e. `[-...]`.
  "scripturl": true, // Tolerate script-targeted URLs.
  "shadow": false, // Allows re-define variables later in code e.g. `var x=1; x=2;`.
  "supernew": false, // Tolerate `new function () { ... };` and `new Object;`.
  "undef": true, // Require all non-global variables be declared before they are used.
  "unused": true, // This option warns when you define and never use your variables.

  // Personal styling prefrences.
  "indent": 2, // Indentation
  "camelcase": true, // This option allows you to force all variable names to use either camelCase style or UPPER_CASE with underscores.
  "smarttabs": false, // This option suppresses warnings about mixed tabs and spaces when the latter are used for alignmnent only. The technique is called SmartTabs.
  "newcap": true, // Require capitalization of all constructor functions e.g. `new F()`.
  "noempty": true, // Prohipit use of empty blocks.
  "nonew": true, // Prohibit use of constructors for side-effects.
  "nomen": false, // Prohibit use of initial or trailing underbars in names.
  "onevar": false, // Allow only one `var` statement per function.
  "plusplus": false, // Prohibit use of `++` & `--`.
  "quotmark": "single", // Force single quotes
  "sub": false, // Tolerate all forms of subscript notation besides dot notation e.g. `dict['key']` instead of `dict.key`.
  "trailing": true, // Prohibit trailing whitespaces.
  "white": false // This option make JSHint check your source code against Douglas Crockford's JavaScript coding style.
}